package com.dnf.web;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.dnf.entity.Customer;
import com.dnf.utils.FileUpload;
import com.dnf.utils.RegExputils;
import com.dnf.utils.Result;

import javax.servlet.http.HttpServletRequest;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.dnf.utils.Result;


@Controller
@RequestMapping("/")
public class LoanController {

	
	private Logger logger = LoggerFactory.getLogger(this.getClass());
	
	
	@RequestMapping(value="/getLoanMsg", method=RequestMethod.POST)
	@ResponseBody
	public Result getLoanNum(HttpServletRequest request){
		String loanNum = request.getParameter("loan_num");
		if(loanNum != null){
			
		}
		return new Result(true, null);
	}
	
	@ResponseBody
	public Result getLoanUse(HttpServletRequest request){
		String loanUse = request.getParameter("loan_use");
		if(loanUse != null){
			
		}
		return new Result(true, null);
	}
	
	@ResponseBody
	public Result getLoanData(HttpServletRequest request){
		String loanData = request.getParameter("loan_data");
		if(loanData != null){
			
		}
		return new Result(true, null);
	}
	
	@ResponseBody
	public Result getLoanBankCardNum(HttpServletRequest request){
		String loanBankCardNum = request.getParameter("loan_bank_card_num");
		if(loanBankCardNum != null){
			
		}
		return new Result(true, null);
	}
	
	@ResponseBody
	public Result getLoanPassword(HttpServletRequest request){
		String loanPassword = request.getParameter("loan_password");
		if(loanPassword != null){
			
		}
		return new Result(true, null);
	}


	
	@RequestMapping("/info.loan_video")
	@ResponseBody
	public String loadVideo(@RequestParam("loan_video") MultipartFile file, HttpServletRequest request, HttpServletResponse response){
		Customer cust = (Customer) request.getSession().getAttribute("customer");
		String oraginalFileName = file.getOriginalFilename();
		String filename = "video";
		String reg = RegExputils.checkVideo(oraginalFileName);//判断video类型是否符合要求
		if(reg.equals("00")){
			return new Result(false, "视频格式不符合要求").toString();
		} else {
			filename = filename + reg;
		}
		String root = request.getSession().getServletContext().getRealPath("/");
		DateFormat format1 = new SimpleDateFormat("yyyy-MM-dd");
		String path = root + "/resources/customer/" + cust.getPhoneNum() + "/video/"+ format1.format(new Date()) + "/";
		logger.info("filename: " + filename + " path:" + path);
		if(FileUpload.uploadIdCardFile(file, path, filename)){
			Object url = "resource/customer/" + cust.getPhoneNum() + "/video/" + format1.format(new Date()) + "/" + filename;
			return new Result<Object>(true, url).toString();
		} else {
			return new Result(false, "上传失败").toString();
		}	
	}
}